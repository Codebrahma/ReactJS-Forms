{"version":3,"sources":["../app/store.js"],"names":["configureStore","devtools","window","devToolsExtension","noop","initialState","history","middlewares","enhancers","store","module","hot","System","import","then","reducerModule","createReducers","default","nextReducers","asyncReducers","replaceReducer"],"mappings":";;;;;kBAWwBA,c;;AAPxB;;AACA;;AACA;;AACA;;;;;;AAPA;;;;AASA,IAAMC,WAAWC,OAAOC,iBAAP,IAA6B;AAAA,SAAM;AAAA,WAAQC,IAAR;AAAA,GAAN;AAAA,CAA9C;;AAEe,SAASJ,cAAT,GAAoD;AAAA,MAA5BK,YAA4B,uEAAb,EAAa;AAAA,MAATC,OAAS;;AACjE;AACA;AACA,MAAMC,cAAc,CAClB,wCAAiBD,OAAjB,CADkB,CAApB;;AAIA,MAAME,YAAY,CAChB,wCAAmBD,WAAnB,CADgB,EAEhBN,UAFgB,CAAlB;;AAKA,MAAMQ,QAAQ,wBACZ,yBADY,EAEZ,uBAAOJ,YAAP,CAFY,EAGZ,gCAAWG,SAAX,CAHY,CAAd;;AAMA;AACA;AACA,MAAIE,OAAOC,GAAX,EAAgB;AACdC,WAAOC,MAAP,CAAc,YAAd,EAA4BC,IAA5B,CAAiC,UAACC,aAAD,EAAmB;AAClD,UAAMC,iBAAiBD,cAAcE,OAArC;AACA,UAAMC,eAAeF,eAAeP,MAAMU,aAArB,CAArB;;AAEAV,YAAMW,cAAN,CAAqBF,YAArB;AACD,KALD;AAMD;;AAED;AACAT,QAAMU,aAAN,GAAsB,EAAtB;AACA,SAAOV,KAAP;AACD","file":"store.js","sourcesContent":["/**\n * Create the store with asynchronously loaded reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { fromJS } from 'immutable';\nimport { routerMiddleware } from 'react-router-redux';\nimport createReducer from './reducers';\n\nconst devtools = window.devToolsExtension || (() => noop => noop);\n\nexport default function configureStore(initialState = {}, history) {\n  // Create the store with middlewares\n  // 1. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [\n    routerMiddleware(history),\n  ];\n\n  const enhancers = [\n    applyMiddleware(...middlewares),\n    devtools(),\n  ];\n\n  const store = createStore(\n    createReducer(),\n    fromJS(initialState),\n    compose(...enhancers)\n  );\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    System.import('./reducers').then((reducerModule) => {\n      const createReducers = reducerModule.default;\n      const nextReducers = createReducers(store.asyncReducers);\n\n      store.replaceReducer(nextReducers);\n    });\n  }\n\n  // Initialize it with no other reducers\n  store.asyncReducers = {};\n  return store;\n}\n"]}