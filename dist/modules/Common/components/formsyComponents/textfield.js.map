{"version":3,"sources":["../../../../../app/modules/Common/components/formsyComponents/textfield.js"],"names":["Textfield","props","className","title","name","type","getValue","setValue","getErrorMessage","isRequired","errorMessage","wrapperClassName","e","target","value","propTypes","string","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEMA,S;;;;;;;;;;;6BACI;AAAA,mBAUF,KAAKC,KAVH;AAAA,UAEJC,SAFI,UAEJA,SAFI;AAAA,UAGJC,KAHI,UAGJA,KAHI;AAAA,UAIJC,IAJI,UAIJA,IAJI;AAAA,UAKJC,IALI,UAKJA,IALI;AAAA,UAMJC,QANI,UAMJA,QANI;AAAA,UAOJC,QAPI,UAOJA,QAPI;AAAA,UAQJC,eARI,UAQJA,eARI;AAAA,UASJC,UATI,UASJA,UATI;;;AAYN,UAAMC,eAAeF,iBAArB;AACA,UAAMG,oCAAkCT,SAAlC,IAA8CQ,eAAe,UAAf,GAA4B,EAA1E,CAAN;;AAEA,aACE;AAAA;AAAA,UAAK,WAAWC,gBAAhB;AACGR,iBAAS;AAAA;AAAA,YAAO,SAASC,IAAhB;AAAuBD,eAAvB;AAA6B;AAAA;AAAA;AAAOM,2BAAe,GAAf,GAAqB;AAA5B;AAA7B,SADZ;AAEE;AACE,gBAAML,IADR;AAEE,gBAAMC,IAFR;AAGE,iBAAOC,cAAc,EAHvB;AAIE,oBAAU;AAAA,mBAAKC,SAASK,EAAEC,MAAF,CAASC,KAAlB,CAAL;AAAA;AAJZ,UAFF;AAQGJ,wBAAgB;AAAA;AAAA,YAAM,WAAU,kBAAhB;AAAoCA;AAApC;AARnB,OADF;AAYD;;;;;;AACF;;AAEDV,UAAUe,SAAV,GAAsB;AACpBX,QAAM,iBAAUY,MAAV,CAAiBP,UADH;AAEpBH,YAAU,iBAAUW,IAAV,CAAeR,UAFL;AAGpBF,YAAU,iBAAUU,IAAV,CAAeR,UAHL;AAIpBD,mBAAiB,iBAAUS,IAAV,CAAeR,UAJZ;AAKpBJ,QAAM,iBAAUW,MALI;AAMpBd,aAAW,iBAAUc,MAND;AAOpBb,SAAO,iBAAUa;AAPG,CAAtB;;AAUAhB,UAAUkB,YAAV,GAAyB;AACvBb,QAAM,MADiB;AAEvBH,aAAW,EAFY;AAGvBC,SAAO;AAHgB,CAAzB;;kBAMeH,S","file":"textfield.js","sourcesContent":["import React, {Component, PropTypes } from 'react';\n\nclass Textfield extends Component {\n  render(){\n    const {\n      className,\n      title,\n      name,\n      type,\n      getValue,\n      setValue,\n      getErrorMessage,\n      isRequired\n    } = this.props;\n\n    const errorMessage = getErrorMessage();\n    const wrapperClassName = `input-group ${className}${errorMessage ? ' invalid' : ''}`;\n\n    return (\n      <div className={wrapperClassName}>\n        {title && <label htmlFor={name}>{title}<span>{isRequired() ? \"*\" : null}</span></label>}\n        <input\n          name={name}\n          type={type}\n          value={getValue() || ''}\n          onChange={e => setValue(e.target.value)}\n        />\n        {errorMessage && <span className=\"validation-error\">{errorMessage}</span>}\n      </div>\n    );\n  }\n};\n\nTextfield.propTypes = {\n  name: PropTypes.string.isRequired,\n  getValue: PropTypes.func.isRequired,\n  setValue: PropTypes.func.isRequired,\n  getErrorMessage: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  title: PropTypes.string,\n};\n\nTextfield.defaultProps = {\n  type: 'text',\n  className: '',\n  title: '',\n};\n\nexport default Textfield;\n"]}