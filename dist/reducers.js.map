{"version":3,"sources":["../app/reducers.js"],"names":["createReducer","routeInitialState","locationBeforeTransitions","routeReducer","state","action","type","merge","payload","asyncReducers","route"],"mappings":";;;;;;kQAAA;;;;;kBAwCwBA,a;;AAnCxB;;AACA;;AACA;;AAEA;;;;;;;;AAQA;AACA,IAAMC,oBAAoB,uBAAO;AAC/BC,6BAA2B;AADI,CAAP,CAA1B;;AAIA;;;AAGA,SAASC,YAAT,GAAyD;AAAA,MAAnCC,KAAmC,uEAA3BH,iBAA2B;AAAA,MAARI,MAAQ;;AACvD,UAAQA,OAAOC,IAAf;AACE;AACA;AACE,aAAOF,MAAMG,KAAN,CAAY;AACjBL,mCAA2BG,OAAOG;AADjB,OAAZ,CAAP;AAGF;AACE,aAAOJ,KAAP;AAPJ;AASD;;AAED;;;AAGe,SAASJ,aAAT,CAAuBS,aAAvB,EAAsC;AACnD,SAAO;AACLC,WAAOP;AADF,KAEFM,aAFE,EAAP;AAID","file":"reducers.js","sourcesContent":["/**\n * Combine all reducers in this file and export the combined reducers.\n * If we were to do this in store.js, reducers wouldn't be hot reloadable.\n */\n\nimport { combineReducers } from 'redux-immutable';\nimport { fromJS } from 'immutable';\nimport { LOCATION_CHANGE } from 'react-router-redux';\n\n/*\n * routeReducer\n *\n * The reducer merges route location changes into our immutable state.\n * The change is necessitated by moving to react-router-redux@4\n *\n */\n\n// Initial routing state\nconst routeInitialState = fromJS({\n  locationBeforeTransitions: null,\n});\n\n/**\n * Merge route into the global application state\n */\nfunction routeReducer(state = routeInitialState, action) {\n  switch (action.type) {\n    /* istanbul ignore next */\n    case LOCATION_CHANGE:\n      return state.merge({\n        locationBeforeTransitions: action.payload,\n      });\n    default:\n      return state;\n  }\n}\n\n/**\n * Creates the main reducer with the asynchronously loaded ones\n */\nexport default function createReducer(asyncReducers) {\n  return combineReducers({\n    route: routeReducer,\n    ...asyncReducers,\n  });\n}\n"]}